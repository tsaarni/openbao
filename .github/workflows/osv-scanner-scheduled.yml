name: OSV-Scanner Scheduled Scan

on:
  # Run weekly.
  schedule:
    - cron: "30 22 * * 0"
  # Allow manual triggering.
  workflow_dispatch:

permissions:
  # Required to upload SARIF file.
  actions: read
  # Require writing security events to upload SARIF file to security tab.
  security-events: write
  # Only need to read contents.
  contents: read

jobs:
  osv-scan-scheduled:
    strategy:
      matrix:
        branches:
          - main
          # - release/2.0.x
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ matrix.branch }}
      - uses: ./.github/actions/set-up-go
        with:
          no-restore: true # don't download them on a cache hit
      - name: "Create config file for osv-scanner"
        run: |
          echo "GoVersionOverride = \"$(go env GOVERSION)\"" > osv-scanner.toml
      - name: "Run scanner"
        uses: google/osv-scanner-action/osv-scanner-action@daa2c68f50d845057895a9c300e42478481c1d26 # v1.9.1
        with:
          scan-args: |-
            --output=results.json
            --format=json
            --config=osv-scanner.toml
            $(find . -name go.mod)
        continue-on-error: true
      - name: "Run osv-scanner-reporter"
        uses: google/osv-scanner-action/osv-reporter-action@daa2c68f50d845057895a9c300e42478481c1d26 # v1.9.1
        with:
          scan-args: |-
            --output=results.sarif
            --new=results.json
            --gh-annotations=false
        continue-on-error: true
      - name: "Upload SARIF file"
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "results.sarif"
          ref: ${{ matrix.branch }}
